----------------------------------------------------------------------------
スマホアプリ開発塾(1)基礎編 - Java言語 5 - 配列
----------------------------------------------------------------------------

まずは、以下の参考サイトで配列について勉強しましょう。

★ 参考サイト
http://www.atmarkit.co.jp/ait/articles/0502/05/news012.html
http://www.javadrive.jp/start/array/


---
◆配列

配列は、メモリ上に連続した領域を確保します。一つの要素は固定サイズであるため、それぞれの要素にアクセスするための場所（アドレス）の計算は単純な掛け算で求められるため、高速なアクセスが可能となります。

例えば、1 要素が 4 バイトの配列の５番目（インデックス 4）にアクセスしたい場合は、
　5 番目の要素の場所　＝　先頭の場所　＋　（4 バイト　×　インデックス 4）
で求められます。

配列の要素は 0 から始まる数値でアクセスします。これをインデックスと呼んだりします。
1 番目の要素はインデックス 0, 2 番目の要素はインデックス 1, 3 番目の要素はインデックス 2…
というように、n 番目の要素はインデックス n-1 となります。
要素数を超えたアクセスや、マイナスインデックスのアクセスはエラーとなります。

配列は、言語レベルでサポートされた非常に簡易的に利用できるまとまったメモリ構造ですが、下記のような操作は苦手（処理に時間がかかる可能性が高い）です。
・配列のサイズを変更する
・要素を削除する
・断片化したメモリプールの中での大きな配列の確保

逆の特性を持ったメモリ構造として、（リンクド）リストがあります。


◆その他

多次元配列、例外、リスト構造、イテレータ


----
【問 1】難易度：☆

筆記問題です。
ソースを見て解答をし、最後にプログラムを実行して答えを確認しましょう。

「はじめに」を参考に (A) の状態を作りましょう。
次に、//X の下に以下のソースを記述しましょう。（コピペ可。）（※まだ実行はしません）

↓↓↓↓
int[] a = new int[1];
a[0] = 1;
int[] b = { 10, 100 };
b[1] = a[0] + b[0] + b[1];
System.out.println("b[1]=" + b[1]);
System.out.println("b.length=" + b.length);

class C
{
    int _f1;
    short _f2;
}
C[] c = new C[3];
c[0] = new C();
c[1] = c[0];
c[2] = null;
c[0]._f1 = 1000;
c[1]._f2 = 10000;
System.out.println("c[0]._f1=" + c[0]._f1 + ", c[0]._f2=" + c[0]._f2);
System.out.println("c.length=" + c.length);
↑↑↑↑

それぞれの出力結果を実行せず予想して、テキストエディタや紙などに解答を書きましょう。
解答を書いたら実行してみましょう（デバッグボタンをクリックし Console を確認）。

※間違えた場合は間違えた原因をしっかり確認しましょう！


----
【問 2】難易度：☆☆

「はじめに」を参考に (A) の状態を作りましょう。
次に、//X の下に以下のソースを記述しましょう。

↓↓↓↓
try
{
	int[] a = { 1, 10, 100, 1000 };
	int w = 0;
	for(int i = 0; i < 99; i++)
	{
		w += a[i];
	}
	System.out.println("w=" + w);	// w=1111 としたい
}
catch(ArrayIndexOutOfBoundsException ex)	// 配列外アクセスの例外をキャッチ
{
	System.out.println("<ERROR!> " + ex);	// エラー
}
↑↑↑↑

この結果が、

w=1111

となるように、プログラムを適切に書き換えましょう。
※警告（ワーニング）は無視してください


----
【問 3】難易度：☆☆

以下のようなプログラムを書きましょう

・int 型２行２列の二次元配列（変数名：m）を作る
・m[0][0] = 4, m[0][1] = 30, m[1][0] = 200, m[1][1] = 1000 を代入
・全ての要素の合計を２つの for 文で加算する
・結果を出力する


----
【問 4】難易度：☆☆

「はじめに」を参考に (A) の状態を作りましょう。
次に、//X の下に以下のソースを記述しましょう。

↓↓↓↓
class A
{
	private int _f1;
	public A(int n) { _f1 = n; }
	public A clone() { return new A(_f1); }
	public void clear() { _f1 = 0; }
	public void print() { System.out.print("" + _f1); }
}
A[][] arr1 = new A[3][];
for(int i = 0; i < arr1.length; i++)
{
	arr1[i] = new A[3];
	for(int j = 0; j < arr1[i].length; j++)
	{
		arr1[i][j] = new A(i + j);
	}
}
A[][] arr2 = /*?1?*/;
for(int i = 0; i < arr2.length; i++)
{
	arr2[i] = /*?2?*/;
	for(int j = 0; j < arr2[i].length; j++)
	{
		arr2[i][j] = arr1[i][j]./*?3?*/;
		arr1[i][j].clear();
	}
}
for(int i = 0; i < arr1.length; i++)
{
	for(int j = 0; j < arr1[i].length; j++)
	{
		arr1[i][j].print();
		System.out.print("-");
		arr2[i][j].print();
		System.out.print(" ");
	}
	System.out.print("\n");
}
↑↑↑↑

この結果が、

0-0 0-1 0-2 
0-1 0-2 0-3 
0-2 0-3 0-4 

となるように、/*?1?*/, /*?2?*/, /*?3?*/ の箇所のみを書き換えましょう。



----------------------------------------------------------------------------
■スマホアプリ開発塾の Facebookページ
https://www.facebook.com/SmaphoAppDevJuku
Facebookページを作成しました！
セミナー（イベント）の参加連絡などはこちらからも行えます。
----------------------------------------------------------------------------